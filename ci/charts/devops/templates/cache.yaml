{{/* Pod Annotations */}}
{{- $rawPodAnnotations := (include "devops.podAnnotations" . | fromYaml) -}}
{{- $podAnnotations := mustMergeOverwrite .Values.podAnnotations $rawPodAnnotations -}}
{{/* Container Security Context */}}
{{- $rawSecurityContext := (include "devops.securityContext" . | fromYaml) -}}
{{- $securityContext := mustMergeOverwrite .Values.securityContext $rawSecurityContext -}}
{{/* Util */}}
{{- $rawName := (include "devops.name" .) -}}
{{- $name := printf "%s-%s" (include "devops.name" .) "cache" -}}
{{/* Labels */}}
{{- $labelOverrides := dict "app" $name "app.kubernetes.io/name" $name "component" "cache" "app.kubernetes.io/component" "cache" -}}
{{- $rawLabels := (include "devops.labels" . | fromYaml) -}}
{{- $rawSelectorLabels := (include "devops.selectorLabels" . | fromYaml) -}}
{{- $labels := mustMergeOverwrite $rawLabels $labelOverrides -}}
{{- $selectorLabels := mustMergeOverwrite $rawSelectorLabels $labelOverrides -}}
{{/* Constants */}}
{{- $image := printf "%s/%s" .Values.image.registry "redis:6.2-alpine" -}}

{{- if .Values.cache.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  namespace: {{ .Values.app.env }}
  labels:
    {{- $labels | toYaml | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- $selectorLabels | toYaml | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- $podAnnotations | toYaml | nindent 8 }}
      labels:
        {{- $selectorLabels | toYaml | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 999
      automountServiceAccountToken: false
      containers:
        - name: {{ .Values.containerName }}
          securityContext:
            {{- $securityContext | toYaml | nindent 12 }}
          image: {{ $image }}
          command:
            - redis-server
          args:
            - /etc/redis/redis.conf
            - --requirepass $(REDIS_PASSWORD)
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
          envFrom:
            - secretRef:
                name: {{ $name }}-env
                optional: false
          resources:
            {{- toYaml .Values.cache.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/redis/redis.conf
              subPath: redis.conf
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ $name }}-config

---
apiVersion: v1
kind: Service
metadata:
  name: {{ $name }}
  namespace: {{ .Values.app.env }}
  labels:
    {{- $labels | toYaml | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - name: redis
      protocol: TCP
      port: 6379
      targetPort: 6379
  selector:
    {{- $selectorLabels | toYaml | nindent 6 }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name }}-config
  namespace: {{ .Values.app.env }}
data:
  redis.conf: |-
    {{- .Files.Get "redis.conf" | nindent 4 }}

{{- end -}}