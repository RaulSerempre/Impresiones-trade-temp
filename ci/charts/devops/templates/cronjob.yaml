{{/* Pod Annotations */}}
{{- $rawPodAnnotations := (include "devops.podAnnotations" . | fromYaml)   -}}
{{- $podAnnotations := mustMergeOverwrite .Values.podAnnotations $rawPodAnnotations -}}
{{/* Pod Security Context */}}
{{- $rawPodSecurityContext := (include "devops.podSecurityContext" . | fromYaml)   -}}
{{- $podSecurityContext := mustMergeOverwrite .Values.podSecurityContext $rawPodSecurityContext -}}
{{/* Container Security Context */}}
{{- $rawSecurityContext := (include "devops.securityContext" . | fromYaml)   -}}
{{- $securityContext := mustMergeOverwrite .Values.securityContext $rawSecurityContext -}}
{{/* Util */}}
{{- $enabled := (index .Values.cronjob .Values.app.env) -}}
{{- $name := include "devops.name" . -}}
{{- $withVolumes := or .Values.volumePaths .Values.additionalVolumeMounts .Values.additionalVolumes .Values.encryptedMySQLConnection .Values.encryptedMongoDBConnection -}}

{{- if $enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $name }}-cronjob
  namespace: {{ .Values.app.env }}
  labels:
    {{- include "devops.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.cronjob.schedule | quote }}
  concurrencyPolicy: {{ .Values.cronjob.concurrencyPolicy }}
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            {{- $podAnnotations | toYaml | nindent 12 }}
        spec:
          restartPolicy: Never
          securityContext:
            {{- $podSecurityContext | toYaml | nindent 12 }}
          automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
          containers:
            - name: {{ .Values.containerName }}
              image: {{ include "devops.completeImage" . }}
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              securityContext:
                {{- $securityContext | toYaml | nindent 16 }}
              command:
                {{- .Values.cronjob.command | toYaml | nindent 16 }}
              {{- if .Values.envFromSecret }}
              envFrom:
                - secretRef:
                    name: {{ include "devops.name" . }}-env
                    optional: false
              {{- end }}
              {{- if (or .Values.encryptedMySQLConnection .Values.encryptedMongoDBConnection)}}
              env:
                {{- if .Values.encryptedMySQLConnection }}
                - name: MYSQL_ATTR_SSL_CA
                  value: /ssl/mysql-ca.pem
                {{- end }}
                {{- if .Values.encryptedMongoDBConnection }}
                - name: DB_CA
                  value: /ssl/mongodb-ca.pem
                {{- end }}
              {{- end }}
              ports:
                - name: http
                  containerPort: {{ .Values.service.targetPort | default .Values.service.port }}
                  protocol: TCP
              resources:
                {{- if .Values.cronjob.resources }}
                {{- toYaml .Values.cronjob.resources | nindent 16 }}
                {{- else -}}
                {{- toYaml .Values.resources | nindent 16 }}
                {{- end }}
              {{- if $withVolumes }}
              volumeMounts:
                {{- if .Values.volumePaths }}
                {{- range $mount := .Values.volumePaths }}
                - name: {{ $name }}-data
                  mountPath: {{ $mount.mountPath }}
                  subPath: {{ $mount.appPath | default $name }}{{if $mount.dirPath }}/{{ $mount.dirPath }}{{- end }}
                {{- end }}
                {{- end }}
                {{- if .Values.encryptedMySQLConnection }}
                - name: mysql-ca
                  mountPath: /ssl/mysql-ca.pem
                  subPath: mysql-ca.pem
                  readOnly: true
                {{- end }}
                {{- if .Values.encryptedMongoDBConnection }}
                - name: mongodb-ca
                  mountPath: /ssl/mongodb-ca.pem
                  subPath: mongodb-ca.pem
                  readOnly: true
                {{- end }}
                {{- if .Values.additionalVolumeMounts }}
                {{- .Values.additionalVolumeMounts | toYaml | nindent 16 }}
                {{- end }}
              {{- end }}
          {{- if $withVolumes }}
          volumes:
            {{- if .Values.volumePaths }}
            - name: {{ include "devops.name" . }}-data
              persistentVolumeClaim:
                claimName: {{ .Values.app.env }}-pvc
            {{- end }}
            {{- if .Values.encryptedMySQLConnection }}
            - name: mysql-ca
              secret:
                secretName: mysql-ca
            {{- end }}
            {{- if .Values.encryptedMongoDBConnection }}
            - name: mongodb-ca
              secret:
                secretName: mongodb-ca
            {{- end }}
            {{- if .Values.additionalVolumeMounts }}
            {{- .Values.additionalVolumes | toYaml | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end -}}
{{- end -}}